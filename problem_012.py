def problem_12(target=500):
    """The seq of triangle numbers is generated by adding the natural numbers.
    So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28.
    What is the value of the first triangle number to have
    over five hundred divisors?"""
    from math import sqrt
    from itertools import count
    def divisors(getal):
        divisors = []
        for x in range(1,getal+1):
            if getal%x == 0:
                if x in divisors:
                    break
                elif x**2 == getal:
                    divisors.append(x)
                else:
                    divisors.append(x)
                    divisors.append(int(getal/x))
        return divisors

    for x in count(1):
        if len(divisors(sum([x for x in range(x+1)]))) >= 500:
            print(x, sum([x for x in range(x+1)]))
            break

problem_12()
